def getGitCommit() {
  return sh(returnStdout: true, script: 'git rev-parse HEAD').trim().take(8)
}

pipeline {
  agent any

  triggers {
    pollSCM('* * * * *')
  }

  stages {
    stage("Apply OC Build-Time things") {
      steps {
        dir("component-1") {
          echo "oc apply -f oc-manifests/build-time/"
          sh "ls"
          sh "pwd"
        }
      }
    }

    stage('Tests') {
      steps {
        parallel (
          "Unit Tests": {
            dir("component-1") {
              echo 'done'
            }
          },
          "Function Tests": {
            dir("component-1") {
              echo 'done'
            }
          },
          "Urine Tests": {
            dir("component-1") {
              sh "cat pipelines/build/Jenkinsfile"
            }
          }
        )
      }
    }

    stage("Deployment"){
      steps {
        openshiftBuild(
          bldCfg: "component-1-deploy-pipeline",
          commitID: getGitCommit(),
          showBuildLogs: "true"
        )
      }
    }
  }
}
